---
title: "Procurement Dynamics: Analyzing Federal Contract Awards to Microsoft"
subtitle: "Trends of Microsoft’s Future in Canadian Government from 2020"
author: 
  - Deyi Kong
thanks: "Code and data are available at: [https://github.com/eeeee-cmd/Procurement/](https://github.com/eeeee-cmd/Procurement/)."
date: today
date-format: long
abstract: "This paper analyzes federal procurement contracts awarded to Microsoft from 2020 to 2024, focusing on contract values, categories, and relationships between buyers and Microsoft. Multiple models were considered, with Bayesian modeling approach selected to predict Microsoft's contract amount. The analysis reveals Microsoft's dominant role in high-value contracts and its consistent partnerships with major government departments like National Defence. These findings provide informations evolving dynamics of federal procurement, raising questions about dependency and competitiveness."
format: pdf
toc: true
toc-depth: 3
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

# Install Packages if not downloaded:
required_packages <- c(
  "tidyverse", "sf", "here", "arrow", "ggplot2", "janitor", "purrr", "knitr", "kableExtra", "modelsummary"
)
for (p in required_packages) {
  if (!require(p, character.only = TRUE)) {
    install.packages(p, character.only = TRUE)
  }
}

# load libraries
library(tidyverse)
library(sf)
library(dplyr)
library(here)
library(arrow)
library(ggplot2)
library(janitor)
library(purrr)
library(knitr)
library(kableExtra)
library(modelsummary)
library(ggcorrplot)
library(gridExtra)
library(rstanarm)

# load data
cleaned_data <- read_parquet(here::here("data/analysis_data/procurement_cleaned.parquet"))
```

# Introduction

Government procurement refers to the acquisition of goods, services, and construction services by the government, spanning a wide range of purchases from office supplies to materials and services needed for large-scale infrastructure projects [@gac]. This process enables public sector innovation, economic stimulus and fulfills strategic objectives. Within this landscape, the relationship between major technology providers and governmental bodies has become increasingly prominent. Among the key in government procurement, large technology firms like Microsoft have become vital partners in IT supporting. Despite the growing reliance on tech giants, limited research examines the dynamics of such partnerships, particularly in the context of federal procurement contracts.

This paper aims to address this gap by analyzing federal procurement contracts awarded to Microsoft from 2020 up to September 2024. Using publicly available data from Investigative Journalism Foundation [@IJF], the study focusing on contract values, categories, and Microsoft’s relationships with key government buyers. 

The main estimand in this study is the amount of federal procurement contracts awarded to Microsoft. This metric is analyzed across multiple dimensions, including contract categories, duration, and partnerships, to quantify Microsoft's role in federal procurement. A Bayesian modeling approach is employed to predict future trends in the contract amounts, integrating prior knowledge with observed data to address uncertainty and provide more robust estimates. The findings reveal that Microsoft plays a dominant role in IT infrastructure and modernization, securing the majority of high-value contracts and establishing consistent partnerships with departments such as Employment and Social Development Canada and National Defense. These findings highlight the broader implications of the private tech sector’s influence on public sector procurement, raising questions about competitiveness, dependency, and strategic alignment.

This study contributes to understand the procurement landscape, providing valuable information for policymakers, industry stakeholders, and academics. It underscores the importance of transparency, strategic planning, and balancing innovation with equity in government contracts.

The structure of the paper is as follows: [@sec-data] outlines the data sources and variables considered, followed by the model setup and justificationa in [@sec-mod]. The results in [@sec-result] presents the key findings of the analysis, with a discussion on the implications. [@sec-discussion] then discusses potential limitations of data, model and suggestions for future research. [@sec-data-details] provides additional data detailed informations about data, model in [@sec-model-details] and methodology in [@sec-meth-details].

# Data {#sec-data}

## Overview

The data used in this analysis comes from publicly available procurement data [@IJF]. The analysis uses the statistical programming language R [@citeR] and several libraries, including `tidyverse` [@tidyverse], `janitor` [@janitor], `knitr` [@knitr], `dplyr` [@dplyr], `arrow` [@arrow], `purrr` [@purrr], and `here` [@here] for data manipulation. `ggplot2` [@ggplot] and `kableExtra` [@kableExtra] for visualization. The dataset covers the information of chosen Federal Procurement Supplier - Microsoft - capturing the contracts from 2020 to 2024 (up to September). 

## Measurement

The dataset used in this analysis originates from Canadian governments of all levels post solicitations for companies to search for business opportunities, as documented in @ProcurementIntro, then collects data from each of these platforms and unifies into standard format.

The measurement process delegates contracts routed through Public Service and Procurement Canada (PSPC), and blanket disclosures organized by Treasury Board of Canada Secretariat (TBS) to understand the federal procurement. The methodologies of federal solicitations are either competitive or non-competitive. Competitive contracts accept bids from all or some subset of suppliers. Non-competitive contracts do not, citing certain exceptions, including a “pressing emergency in which delay would be injurious to the public interest,” or when the estimated cost to the buyer is below certain thresholds defined for some goods and services.

More information about solicitation method can be found in @sec-appx.

\newpage

## Data Cleaning

After imported the raw dataset using `read_csv` function, I first select specific columns to focus on relevant information towards this study by omitting redundant information, such as the contract link and same value of region. Then I rename key variables from raw data for clarity. The key variables of interest in this analysis include Contract, StartDate, AwardDate, EndDate, Buyer, and Amount.

For any missing data (NA) of StartDate, I infer the StartDate from the AwardDate to replace the missing value as the value of AwardDate. Then I standardize the date format of all date related datas for proper parsing by using `mdy()` function and change the dollar format of amount into numeric numbers for future calculation purposes. Due to the error with unknown reason that EndDate is before StartDate or AwardDate, those entries were excluded from this paper. 

PreparatoryPhase, PhaseDays, and ContractDays variables were created for the purpose of analyzing preparatory phase and performance phase corresponding to each contract. PreparatoryPhase calculates the days from AwardDate to StartDate. ContractDays calculates the days from StartDate to EndDate. PhaseDays take the absolute value of PreparatoryPhase because of the minor effect of either prepare before contract being awarded or prepare after contract being awarded. I also created new variables called ContractType and BuyerCleaned, which categorizes the most common buyers and contracts based on keywords.

This dataset contains only two entries for 2019 federal procurement contracts awarded to Microsoft. So, I filter out the contracts before 2020 to focus on the records between 2020 and September 2024 as desired. By summary the data set, I noticed a significant outlier with value of $102,260,150, which largely impact the outcome. So, I decide to drop this entry. Then I check the character type variables, Supplier and Contract, using `table()` function for the purpose of manipulating input error. I standardize the supplier's name which combine the similar name due to capitalization or some notation differences, and format them with first letter of each word capitalized.

After completing the cleaning, we saved the final dataset in both Parquet and CSV formats for later analysis.

## Outcome Variables

The main outcome variable of interest is the amount of federal procurement contracts awarded to Microsoft. This variable is need to represent the financial magnitude of Microsoft with the federal government and measurement of evaluating procurement dynamics. [@fig-amount] illustrates the annual total amounts of federal procurement contracts awarded to Microsoft from 2020 to 2024 (up to September). The histogram reveals a generally increasing trend of total value of each year's contract. This may reflect the growing of technology in government operations, including software, cloud solutions, and IT infrastructure. The amount in 2023 doubles the amount in 2021, which suggests a heightened investment in federal procurement funding and large-scale projects. 

```{r}
#| label: fig-amount
#| fig-cap: The histogram shows the distribution of the total amount($million) of each year's federal contract (since 2020).
#| echo: false
#| eval: true
#| warning: false
#| message: false

# Extract year from AwardDate and filter the year from 2020 to 2024
year_data <- cleaned_data %>%
  mutate(
    Year = as.integer(format(as.Date(AwardDate), "%Y"))
    )

# Sum the total amount group by year
yearly_amount <- year_data %>%
  group_by(Year) %>%
  summarize(TotalAmount = sum(Amount, na.rm = TRUE)) %>%
  mutate(TotalAmount = round(TotalAmount / 1000000)) # Convert to millions

# Plot the amount in each year
ggplot(yearly_amount, aes(x = as.factor(Year), y = TotalAmount)) +
  geom_bar(stat = "identity", fill = "darkorange", color = "black", alpha = 0.7) +
  labs(
    title = "Total Contract Amounts by Year for Microsoft",
    x = "Year",
    y = "Total Amount ($million)"
  ) +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 10), axis.text.x = element_text(size = 10))

```

## Predictor Variables

In this analysis, several key predictors were identified to evaluate procurement data effectively. The first variable, **ContractType**, is a character-type variable that identifies each procurement contract awarded to Microsoft into Categories. [@tbl-contract]

```{r}
#| label: tbl-contract
#| tbl-cap: The table summarizes the contract type which has over 25 contracts with the total dollar amount, and average dollar amount per contract. 
#| echo: false
#| eval: true
#| warning: false
#| message: false

# Summarize the data and filter buyers with counts >= 25
summary_table <- cleaned_data %>%
  group_by(ContractType) %>%
  summarise(
    Count = n(), 
    TotalAmount = sum(Amount),  # Calculate the total contract value
    AvgAmount = mean(Amount)    # Calculate the average contract value
  ) %>%
  filter(Count > 25) %>%
  arrange(desc(Count))  # Arrange in descending order based on Count

# Format the TotalAmount column with dollar format
summary_table$TotalAmount <- scales::label_dollar()(summary_table$TotalAmount)
summary_table$AvgAmount <- scales::label_dollar()(summary_table$AvgAmount)

# Display the summary table using kableExtra for nicer formatting
summary_table %>%
  kable(col.names = c("Contract Type", "Counts", "Total Amount", "Average")) %>%
  kable_styling(full_width = F, position = "center", bootstrap_options = c("striped", "hover")) %>%
  column_spec(1, width = "22em")  # Set column width to wrap text

```

**Buyer** is a character-type variable representing the federal government department or agency who initiate and award the contract. [@tbl-buyer] shows the top 10 buyer's name who has over 50 contracts with Microsoft, which identifies key partners and understand the distribution of contracts across sectors. The table highlights that Employment and Social Development Canada (ESDC) and National Defence account over 50% of Microsoft's total awards. [CALCULATED 52.02%, BUT THINKING IF THIS SHOULD BE ADDED TO THE TABLE]

```{r}
#| label: tbl-buyer
#| tbl-cap: The table summarizes top 10 buyer's name who has over 25 contracts with Microsoft in total with contract count, total dollar amount, and average dollar amount per contract. 
#| echo: false
#| eval: true
#| warning: false
#| message: false

# Summarize the data and filter buyers with counts >= 25
summary_table <- cleaned_data %>%
  group_by(Buyer) %>%
  summarise(
    Count = n(), 
    TotalAmount = sum(Amount),  # Calculate the total contract value
    AvgAmount = mean(Amount)    # Calculate the average contract value
  ) %>%
  filter(Count > 25) %>%
  arrange(desc(Count))  # Arrange in descending order based on Count

# Format the TotalAmount column with dollar format
summary_table$TotalAmount <- scales::label_dollar()(summary_table$TotalAmount)
summary_table$AvgAmount <- scales::label_dollar()(summary_table$AvgAmount)

# Display the summary table using kableExtra for nicer formatting
summary_table %>%
  kable(col.names = c("Buyer", "Contract", "Total Amount", "Average")) %>%
  kable_styling(full_width = F, position = "center", bootstrap_options = c("striped", "hover")) %>%
  column_spec(1, width = "22em")  # Set column width to wrap text

```

This dataset contains a series of date-type variables capturing key milestones in the procurement process. **Award Date** is the date when the contract was officially granted to Microsoft. **Start Date** is the date when the contracted services or goods provision begins. **End Date** is the date when the contract is completed or terminated. These variables are essential for analyzing procurement timelines and trends over the study period.

**PhaseDays** is a numeric variable demonstrates the days between AwardDate and StartDate. In [@fig-preparatory], there is a high concentration around 0 indicates rapid procurement processes or emergency software services. [@fig-preparatory] also shows a few outlying contracts with a mobilization period of over one year. These long mobilization periods reflects issues such as delays in the procurement process, a long negotiation period, or administrative approvals.

```{r}
#| label: fig-preparatory
#| fig-cap: The histogram shows the distribution of preparatory period.
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| fig.width: 4    # Width of the figure in inches
#| fig.height: 3   # Height of the figure in inches

# create plot for Distribution of Poll Scores by candidate
ggplot(cleaned_data, aes(x = PhaseDays)) +
  geom_histogram(
    bins = 30,
    fill = "salmon",
    color = "black",
    alpha = 0.7
  ) +
  labs(
    x = "Preparatory Phase (day)",
    y = "Frequency"
  ) +
  theme_minimal()
```

**ContractDays** is a numeric variable which is the days between $StartDate$ and $EndDate$. [@fig-contract] shows the distribution of performance period. The right skewed distribution in [@fig-contract] indicates that the majority of contract duration is within a year. There is an over 5 years performance period in [@fig-contract] implies a massive project that requires extensive preparation.

```{r}
#| label: fig-contract
#| fig-cap: The histogram shows the distribution of performance period, which demonstrates the days between start and end date.
#| echo: false
#| eval: true
#| warning: false
#| message: false

# create plot for Distribution of Poll Scores by candidate
ggplot(cleaned_data, aes(x = ContractDays)) +
  geom_histogram(
    bins = 15,
    fill = "steelblue",
    color = "black",
    alpha = 0.7
  ) +
  labs(
    x = "Contract Performance Phase (day)",
    y = "Frequency"
  ) +
  theme_minimal()
```

The correlation matrix in [@fig-cor] visualizes the relationships between key numerical predictor variables and the outcome variable, $Amount$. [@fig-cor] shows correlations include a weak negative correlations between $PreparatoryPhase$ and $ContractDays$; and weak positive correlations between predictors and $Amount$.

```{r}
#| label: fig-cor
#| fig-cap: Correlation matrix showing the relationships between numerical predictor variables and the outcome Amount variable
#| echo: false
#| eval: true
#| warning: false
#| message: false

# filter to numerical predictor variables
numerical_data <- cleaned_data %>%
  select(Amount, PreparatoryPhase, ContractDays)

correlation_matrix <- cor(numerical_data, use = "complete.obs")

# create correlation matrix
ggcorrplot(correlation_matrix, lab = TRUE) + 
  theme(
    axis.text.x = element_text(size = 10),  # Adjust x-axis text size
    axis.text.y = element_text(size = 10) # Adjust y-axis text size
  )
```

# Model {#sec-mod}

## Model Set-Up {#sec-modset}

This paper utilizes a Bayesian model to examine the factors influencing the dollar amount of federal procurement contracts awarded to Microsoft. Define $Amount_i$ as the dollar amount of the federal procurement contract awarded to Microsoft and $\mu_i$ is the expected value of the contract amount modeled as a linear combination of the predictors. The model for predicting $Amount_i$ is specified as follows:
\begin{align*} 
Amount_i \mid \mu_i, \sigma &\sim \text{Normal}(\mu_i, \sigma)\\
\mu_i &= \alpha + \beta_1 \cdot \text{ContractType}_i + \beta_2 \cdot \text{Buyer}_i + \beta_3 \cdot \text{ContractDays}_i + \beta_4 \cdot \text{PhaseDays}_i \\
\alpha &\sim \text{Normal}(0, 2) \\
\beta_1, \beta_2, \beta_3, \beta_4 &\sim \text{Normal}(0, 2) \\
\sigma &\sim \text{Exponential}(1)
\end{align*}
Where:\
- $\alpha$ is the intercept term.\
- $\beta_1, \beta_2, \beta_3, \beta_4$ are the coefficients associated with the predictors:\
  - $ContractType_i$: A categorical variable representing the contract type.\
  - $Buyer_i$: A categorical variable representing the buyer of the contract.\
  - $ContractDays_i$: A numeric variable representing the duration of the contract is active.\
  - $PhaseDays_i$: A numeric variable representing the days between AwardDate and StartDate.

The model is fit using the `rstanarm` package of @rstanarm in R [@citeR], with the specified priors guiding the model while allowing it to adapt to the data.

### Model Justification
This paper expect that the factors - such as ContractType, Buyer, ContractDays and PhaseDays - will influence the outcome of contract amount. In particular, ...

In this paper, I compared three different modeling approaches to examine the factors influencing the federal procurement contract amount: linear regression, random forest, and Bayesian regression. Each of these models offers different advantages and trade-offs. More detailed justification about model selection will be discussed in [@sec-discussion]. The Bayesian model is selected due to better performance and flexibility.

Bayesian approach can explicitly model uncertainty by incorporating prior knowledge and provides a full posterior distribution of the model parameters. This is useful when the data is sparse and prior knowledge about the contract types, buyers, or duration is available. The linear regression structure was selected due to its simplicity and interpretability. The numeric dependent variable, $Amount_i$, gives a chance of linear regression for modeling the relationship between the contract amount and its predictors. 

By including weakly informative priors for the coefficients and residual standard deviation, the model remains flexible and interpretable, while still preventing extreme parameter estimates. The use of an exponential prior for $\sigma$ allows the model to adapt a scale of residuals in the data, providing estimates of the variance. The normal prior for the coefficients $\beta_1, \beta_2, \beta_3, \beta_4$ with mean 0 and standard deviation 2 shows the expectation that the coefficients should not be too larg but flexible enough to adapt the data.

This Bayesian linear regression model balances complexity with interpretability, and its flexibility allows us to draw meaningful observations from the data while quantifying uncertainty around the estimates, especially when the sample size is not large or when the predictors have a complex relationship with the outcome. [TOO GENERAL, CHANGE]

## Assumptions and Limitations

The model takes several assumptions, including linear relationship between predictors, normality of the residuals, independence of observations, homoscedasticity, and reasonable chosen priors.

While the model presents some valuable observations of Microsoft’s federal procurement contracts, there are some model limitations including prior function selection, data quality, potential for endogeneity, generalizability, and unobserved variables. These limitations will be discussed more detailed in [@sec-discussion].


# Results {#sec-result}

## Data

The boxplot @fig-box-1 shows the Contract Duration across various Contract Types. As we can see in @fig-box-1, Computer Services and Consulting contracts tend to have longer durations. This suggests these contracts often involve more complex or ongoing services that require extended timelines. In contrast, License/Maintenance Fees and Software contracts show shorter durations, with tighter interquartile ranges and lower medians, indicating that these contracts are likely less complex and are typically limited to a defined time period. 

The boxplot @fig-box-2 shows the Phase Duration for each Contract Type. @fig-box-2 reveals that certain contract types, such as Consulting and Distributed Computing Environment, have longer preparatory phases, with a higher median and a larger spread. This suggests these contracts require more time for negotiation, planning, or administrative procedures before the actual work begins. On the other hand, Computer Services and License/Maintenance Fees contracts exhibit shorter preparatory phases, as evidenced by the lower medians and narrower interquartile ranges in @fig-box-2. This suggests that these contracts are more straightforward and may require less preparation before implementation.
```{r}
#| label: fig-box
#| fig-cap: The Boxplots shows the relationship of ContractDays and PhaseDays with ContractType. 
#| fig-subcap: ["Contract Duration in each Contract Type","Phase Duration in each Contract Type"]
#| echo: false
#| warning: false
#| layout-nrow: 2

# Clean and transform the data
data <- cleaned_data %>%
  mutate(
    ContractType = gsub("Related", "", ContractType), # Remove "Related"
    ContractType = str_wrap(gsub("/", " or ", ContractType), width = 10) # Wrap long labels
  )

# First graph: ContractType vs. ContractDays
ggplot(data, aes(x = ContractType, y = ContractDays)) +
  geom_boxplot() +
  theme_minimal() +
  labs(x = "Contract Type", y = "Contract Duration") +
  theme(axis.text.x = element_text(size = 6))

# Second graph: ContractType vs. PhaseDays
ggplot(data, aes(x = ContractType, y = PhaseDays)) +
  geom_boxplot() +
  theme_minimal() +
  labs(x = "Contract Type", y = "Phase Duration") +
  theme(axis.text.x = element_text(size = 6))
```


```{r}
#| label: fig-date
#| fig-cap: Heatmap of Contracts by Four-Month Periods (2020–2024). The heatmap shows the frequency of federal procurement contracts awarded to Microsoft in each four-month period, with darker colors representing higher contract frequencies.
#| echo: false
#| eval: true
#| warning: false
#| message: false

# Create a new variable for "four-month periods"
data <- cleaned_data %>%
  mutate(
    Period = case_when(
      Month %in% 1:4 ~ "Jan-Apr",
      Month %in% 5:8 ~ "May-Aug",
      Month %in% 9:12 ~ "Sep-Dec"
      )
  )

# Count the number of contracts for each four-month period and year
contract_counts <- data %>%
  mutate(Year = as.factor(Year)) %>%
  group_by(Year, Period) %>%
  summarise(Count = n(), .groups = "drop")

# Heatmap plot
ggplot(contract_counts, aes(x = Period, y = Year, fill = Count)) +
  geom_tile(color = "white") +  # Add color between tiles for better visibility
  scale_fill_gradient(low = "lightblue", high = "darkblue") +  # Adjust color scale
  labs(x = "Four-Month Period", y = "Year", title = "Heatmap of Contracts by Four-Month Periods") +
  theme_minimal()
```


```{r}
#| label: fig-mobilization
#| fig-cap: The scatter plot shows ...
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| 
ggplot(data, aes(x = AwardDate, y = StartDate)) +
  geom_point(aes(color = Contract)) +
  labs(x = "Award Date", y = "Start Date", title = "Award Date vs Start Date") +
  theme(legend.position = "none")  # This removes the legend
```

```{r}
#| label: fig-performance
#| fig-cap: The scatter plot shows ....
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| 
ggplot(data, aes(x = StartDate, y = EndDate)) +
  geom_point(aes(color = Contract)) +
  labs(x = "Start Date", y = "End Date", title = "Start Date vs End Date") +
  theme(legend.position = "none")  # This removes the legend
```

## Model

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

bayesian_model <-
  readRDS(file = here::here("models/bayesian_model.rds"))
```

```{r}
#| label: tbl-modelresults
#| echo: false
#| eval: true
#| tbl-cap: "Explanatory models of contract amount based on ContractType, Buyer, ContractDays, PhaseDays and Month"
#| warning: false
#| message: false

# Generate the model summary

bayesian_model_full <- readRDS(here::here("models/bayesian_model_full.rds"))
bayesian_model <- readRDS(here::here("models/bayesian_model.rds"))

model_list <- list("Bayesian Model_Full" = bayesian_model_full, "Bayesian Model" = bayesian_model)

modelsummary(
  model_list,
  output = "kableExtra", 
  coef_map = c("ContractType" = "ContractType", "Buyer" = "Buyer", 
               "ContractDays" = "ContractDays", "PhaseDays" = "PhaseDays")
) %>%
  kable_styling(latex_options = c("striped", "scale_down"))
```



\newpage

# Discussion {#sec-discussion}

## Data

The completeness and reliability of the data. For the missing or erroneous records, despite the data cleaning process, introduce bias and distort the findings.

Since the data of the procurement contracts awarded to Microsoft in Canada is between 2020 and 2024 (up to September), the analysis provides a snapshot of recent procurement trends during this period. However, the data do not capture longer-term patterns or emerging shifts in procurement policies.

## Limitations

One limitation of the model is that it may fail to account for certain external factors or unobserved variables such as political factors, budgetary constraints, and departmental priorities. These external factors could lead to omitted variable bias, which also influence procurement decision.

The model assumes a linear relationship between the independent variables and the dependent variable. However, procurement dynamics may be more complex, with non-linear interactions between variables. The model categorizes contract types and buyers into broad groups, which may oversimplify the true diversity of contracts awarded. 

There may be issues of endogeneity, where causality runs in both directions between some predictors and the outcome variable. The amount of procurement from a buyer may influence the allocation of future budgets to that department, which in turn affects future contract amounts awarded to Microsoft. This reciprocal relationship could introduce bias in the coefficient estimates if not properly addressed.

## Model Selection


## Weaknesses and Next Steps

This paper provides a foundation for a deeper understanding of federal contract awards to Microsoft, but it also suggests several directions for future exploration. First, the study can expand to include comparisons with other major suppliers. By examining whether Microsoft's procurement trends are unique or reflective of broader patterns across industries. This gives a better understanding on assess whether certain dynamics are systemic within federal contracting practices.

Data quality and consistency issues are also of concern. The anomalies identified in this study, such as incomplete or inconsistent contract dates, highlight the need for improved data reporting standards. These discrepancies can be addressed in collaboration with government agencies to improve the reliability of procurement datasets and ensure that future analyses are more reliable and actionable.

\newpage

\appendix

# Appendix {-}


# Additional data details {#sec-data-details}

# Model details {#sec-model-details}

## Bayesian Model

### Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(bayesian_model) +
  theme_classic() +
  theme(legend.position = "bottom")

posterior_vs_prior(bayesian_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set3") +
  theme(
    legend.position = "none", 
    axis.text.y = element_text(size = 7)
    ) +
  coord_flip() 

```

### Diagnostics

@fig-trace-1 is a trace plot. It shows... This suggests...

@fig-trace-2 is a trace plot. It shows... This suggests...

@fig-rhat is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-trace
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot - Contract Type","Trace plot - Buyers"]
#| layout-nrow: 2

# Extract the parameter names
param_names <- colnames(as.matrix(bayesian_model))

# Use grep to find all parameters that contain "ContractType"
contract_type_params <- grep("ContractType", param_names, value = TRUE)

# Use grep to find all parameters that contain "Buyer"
buyer_params <- grep("Buyer", param_names, value = TRUE)

# # Group 1: Buyers containing the word "the"
# buyers_with_the <- grep("the", buyer_params, value = TRUE, ignore.case = TRUE)
# 
# # Group 2: Buyers containing the word "the"
# buyers_with_and <- grep("and", buyer_params, value = TRUE, ignore.case = TRUE)
# buyers_with_and <- buyers_with_and[!grepl("the", buyers_with_and, ignore.case = TRUE)]
# 
# # Group 3: Buyers containing the word "the"
# buyers_with_of <- grep("of", buyer_params, value = TRUE, ignore.case = TRUE)
# buyers_with_of <- buyers_with_of[!grepl("the|and", buyers_with_of, ignore.case = TRUE)]
# 
# # Group 4: Buyers containing the word "Canada"
# buyers_with_canada <- grep("Canada", buyer_params, value = TRUE, ignore.case = TRUE)
# buyers_with_canada <- buyers_with_canada[!grepl("the|and|of", buyers_with_canada, ignore.case = TRUE)]
# 
# # Group 5: Buyers that do not contain "the" or "Canada"
# other_buyers <- grep("Canada|the|and|of", buyer_params, value = TRUE, invert = TRUE, ignore.case = TRUE)

# Plot trace for ContractType
plot(bayesian_model, "trace", pars = contract_type_params) +
  theme_minimal() +
  theme(
    legend.position = "bottom",                # Place legend at the bottom
    legend.text = element_text(size = 6),      # Adjust legend label size
    legend.title = element_text(size = 8),     # Adjust legend title size
    axis.text.x = element_text(size = 6),      # Adjust x-axis text size
    axis.text.y = element_text(size = 6),      # Adjust y-axis text size
    strip.text = element_text(size = 5)
    )

# Plot trace for ContractType
plot(bayesian_model, "trace", pars = buyer_params) +
  theme_minimal() +
  theme(
    legend.position = "bottom",                # Place legend at the bottom
    legend.text = element_text(size = 6),      # Adjust legend label size
    legend.title = element_text(size = 8),     # Adjust legend title size
    axis.text.x = element_text(size = 4),      # Adjust x-axis text size
    axis.text.y = element_text(size = 5),      # Adjust y-axis text size
    strip.text = element_text(size = 5)
    ) 

# # Plot trace for buyers' name containing "the"
# plot(bayesian_model, "trace", pars = buyers_with_the)
# 
# # Plot trace for buyers' name containing "and"
# plot(bayesian_model, "trace", pars = buyers_with_and)
# 
# # Plot trace for buyers' name containing Canada
# plot(bayesian_model, "trace", pars = buyers_with_canada)
# 
# # Plot trace for buyers' name containing "of"
# plot(bayesian_model, "trace", pars = buyers_with_of)
# 
# # Plot trace for Other buyers
# plot(bayesian_model, "trace", pars = other_buyers)
```
```{r}
#| label: fig-rhat
#| echo: false
#| eval: true
#| fig-cap: "Rhat plot for bayesian model"
#| message: false
#| warning: false
#| fig-subcap: ["Rhat plot - Full model","Rhat plot - Reduced model"]
#| layout-ncol: 2

plot(bayesian_model_full, "rhat")
plot(bayesian_model, "rhat")
```
## Linear Regression Model

```{r}
#| label: tbl-keyestimates
#| tbl-cap: Summary of key model estimates for Microsoft, including coefficients for predictors like xxxx, with standard errors for each estimate. Model performance statistics, such as sample size, R², and adjusted R², are also displayed.
#| echo: false
#| eval: true
#| warning: false
#| message: false

# load data and model
lm_model_full <- readRDS(here::here("models/lm_model_full.rds"))
lm_model <- readRDS(here::here("models/lm_model.rds"))
model_list <- list("Linear Model_Full" = lm_model_full, "Linear Model" = lm_model)

modelsummary(
  model_list,
  output = "kableExtra", 
  statistic = "std.error", 
  coef_map = c("ContractType" = "ContractType", "Buyer" = "Buyer", 
               "ContractDays" = "ContractDays", "PhaseDays" = "PhaseDays")
  ) %>%
  kable_styling(latex_options = c("striped", "scale_down"))
```

## Random Forest Model

```{r}
#| label: tbl-rfkeyestimates
#| tbl-cap: Summary of key model estimates for Microsoft, including coefficients for predictors like xxxx, with standard errors for each estimate. Model performance statistics, such as sample size, R², and adjusted R², are also displayed.
#| echo: false
#| eval: true
#| warning: false
#| message: false

# load data and model
rf_model<- readRDS(here::here("models/rf_model.rds"))

# Summary of the Random Forest model
summary(rf_model, output = "kableExtra")

# # Error rates
# rf_model$err.rate  # Error rates for each class (classification)
# rf_model$oob.err    # Out-of-bag error estimate

```

# Methodology {#sec-meth-details}

The methodology employed in this study involves analyzing federal procurement contracts awarded to Microsoft, leveraging data from two primary sources: Public Services and Procurement Canada (PSPC) and the Treasury Board of Canada Secretariat (TBS). These two datasets provide information on government procurement, but they come with distinct limitations and reporting structures [@ProcurementSources].

## Data Sources and Structure

Federal procurement data is categorized into two main streams:

+ PSPC serves as the central procurement body for most federal government departments and is responsible for managing a significant portion of federal contracts. It maintains a public platform called CanadaBuys, where procurement information is published. However, due to migration from the older BuyAndSell platform and the incomplete nature of pre-2022 data, some variables, such as contract types and trade agreement information, are missing or inconsistently reported. The PSPC data is particularly useful for understanding contracts where the PSPC is the managing body, but only contracts above a certain dollar threshold are publicly available.

+ TBS consolidates procurement data from all government departments and requires proactive publication under the Access to Information Act. The TBS dataset is more comprehensive in terms of the number of contracts, but it suffers from inconsistencies and gaps in the reported fields. TBS publishes data quarterly, and records before 2017 should not be considered complete. Unlike PSPC, TBS data includes the full details of contract awards but does not incorporate tender or solicitation data.

## Data Integration and Challenges:

There is an overlap between TBS and PSPC data, such that many contracts reported by PSPC are also included in the TBS dataset. However, the two datasets do not always align perfectly. Contracts reported by TBS may contain different details from the PSPC records. 

This mismatch is exacerbated by the lack of a consistent unique identifier that would allow for easy linking between the two datasets. While about 20% of PSPC awards have matching TBS records, many contracts do not, making it impossible to perfectly merge the two datasets.

To address this, both datasets were kept separate in [@ProcurementSources]. PSPC data was used primarily for its comprehensive tender information, while TBS data was relied upon for its broader coverage of contract awards, spanning more years and a greater volume of contracts.

## Solicitation Methods and Contract Types:

Federal procurement processes are governed by various solicitation methods, which determine how contracts are awarded. These methods are categorized into competitive and non-competitive processes. 

Four competitive options:

+ Open bidding: Any supplier can bid in response to an online solicitation.
+ Selective tendering: Only some prequalified suppliers can bid.
+ Limited tendering: Deviation from requirements of the relevant trade agreements (see Trade Agreements), still allowing bids.
+ Traditional: Many suppliers can bid but not in response to a public, online solicitation; for example, responding to an email sent to suppliers by the government.

Two non-competitive options:

+ Advanced Contract Award Notice: Notice to suppliers that the buyer intends to award a contract to a pre-identified supplier, while accepting a Statement of Capabilities, not a bid, from challenging suppliers. 
+ Non-competitive: Blanket category for all other non-competitive processes.

\newpage

# References
